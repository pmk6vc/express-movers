version: "3.9"

# Inject env vars at runtime by entering 'docker-compose up [--detach] [--force-recreate] [--renew-anon-volumes]'
services:
    postgres-db:
        # TODO: Match image with what is used in deployment
        image: 'postgres:14-alpine'
        container_name: pgdb
        env_file:
            - .env/db.env
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        image: express-movers-docker:latest
        build:
            context: .
            args:
                - SERVICE_PORT=$SERVICE_PORT
        ports:
            - 3000:${SERVICE_PORT}
        container_name: express_app
        depends_on:
            postgres-db:
                condition: service_healthy
        env_file:
            - .env/app.env
        environment:
            - DB_NAME=${POSTGRES_DB}
            - DB_HOST=postgres-db
            - DB_PORT=5432
            - DB_USERNAME=${POSTGRES_USER}
            - DB_PASSWORD=${POSTGRES_PASSWORD}
